package {{PackageName}}

import (
	"api/pkg/app"
	"api/pkg/database"
	"api/pkg/paginator"
	"api/pkg/logger"

	"github.com/gin-gonic/gin"
)

func Get(idstr string) ({{VariableName}} {{StructName}}) {
    database.DB.Where("id", idstr).First(&{{VariableName}})
    return
}

func GetBy(field, value string) ({{VariableName}} {{StructName}}) {
    database.DB.Where("? = ?", field, value).First(&{{VariableName}})
    return
}

func All() ({{VariableNamePlural}} []{{StructName}}) {
    database.DB.Find(&{{VariableNamePlural}})
    return 
}

func IsExist(field, value string) bool {
    var count int64
    database.DB.Model({{StructName}}{}).Where(" = ?", field, value).Count(&count)
    return count > 0
}

func Paginate(c *gin.Context, perPage int, q interface{}) ({{VariableNamePlural}} []{{StructName}}, paging paginator.Paging) {
    err := c.Bind(&q)
    if err != nil {
        logger.Error(err.Error())
    }
    db := database.MakeCondition(q, database.DB.Model({{StructName}}{}))
    paging = paginator.Paginate(
        c,
        db,
        &{{VariableNamePlural}},
        app.V1URL(database.TableName(&{{StructName}}{})),
        perPage,
        "*",
    )
    return
}